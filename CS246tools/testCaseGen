#!/bin/bash
# $1 is the file cotainning all test cases
# $2 is the name of the test suite
# $3 is the name of the zip file (optional)
# each test case may or may not contain the test case name
# if the test case name is not contained use, the default test case name
# This file will output the .in .out and test suite file
if [ -r $2 ] ; then
	rm $2
fi
name=${1} # the name of the test cases file
csplit -s --prefix=${name} --digits=1 ${1} '/^$/' {*} # split file by empty lines
files=$(ls | egrep "^${name}[0-9]+$") # get all files generated by splitting
for i in $files
do
	sed '/^$/d' $i > $i.out # remove empty lines
  	mv  $i.out $i
	sed -i '/#/d' $i # remove comments which starts with #
	firstLine=$(head -n 1 $i) 
	# check whether the name of the test case is specifiec
	if [[ $firstLine == "name="* ]] ; then
		# get the test case name specified in the first line
		newName=${firstLine##"name="}
		tail -n +2 $i > $newName
		rm $i
		i=${newName}
	fi
	# generate the test suite file
	echo ${i} >> $2
	# split the test case to .in , .out , and .args(if exits)
	# Get the occurence of first (and second) ---- delimiter
	lineNumber1=$(cat -n ${i} | egrep "[0-9]+\s+(\-+)$" | awk '{print $1}' | head --lines=1)
	lineNumber2=$(cat -n ${i} | egrep "[0-9]+\s+(\-+)$" | awk '{print $1}' | tail --lines=+2)
	head -n $(($lineNumber1-1)) $i > $i.in # creat .in
	# if args exists, create .args, otherwise, only create .out
	if [ ! -z ${lineNumber2} ] ; then
		head -n $(($lineNumber2-1)) $i | tail -n +$(($lineNumber1+1)) > $i.out
		tail -n +$(($lineNumber2+1)) $i > $i.args
	else
		tail -n +$(($lineNumber1+1)) $i > $i.out
	fi
	rm $i # delete the test case file
done

# If there is a third argument, then create zip file
if [ $# -eq 3 ] ; then
	while read line
	do 
		zip $3 $line.in
		zip $3 $line.out
		if [ -r $line.args ] ; then
			zip $3 $line.args
		fi	
	done < $2
	zip $3 $2
fi
